# -*- mode: python -*-

Import("env")

generateErrorCodes = env.Command(
    target=['error_codes.h', 'error_codes.cpp'],
    source=['generate_error_codes.py', 'error_codes.err'],
    action='$PYTHON $SOURCES $TARGETS')
env.Alias('generated-sources', generateErrorCodes)

env.Library('base',
            ['data_range.cpp',
             'data_range_cursor.cpp',
             'data_type.cpp',
             'data_type_string_data.cpp',
             'data_type_terminated.cpp',
             'error_codes.cpp',
             'global_initializer.cpp',
             'global_initializer_registerer.cpp',
             'init.cpp',
             'initializer.cpp',
             'initializer_context.cpp',
             'initializer_dependency_graph.cpp',
             'validate_locale.cpp',
             'make_string_vector.cpp',
             'parse_number.cpp',
             'status.cpp',
             'string_data.cpp',
            ],
            LIBDEPS=['$BUILD_DIR/mongo/util/quick_exit',
                     '$BUILD_DIR/third_party/murmurhash3/murmurhash3',
            ])

env.CppUnitTest('base_test',
                ['counter_test.cpp',
                 'data_cursor_test.cpp',
                 'data_range_cursor_test.cpp',
                 'data_range_test.cpp',
                 'data_type_string_data_test.cpp',
                 'data_type_terminated_test.cpp',
                 'data_type_validated_test.cpp',
                 'data_view_test.cpp',
                 'encoded_value_storage_test.cpp',
                 'initializer_dependency_graph_test.cpp',
                 'initializer_test.cpp',
                 'owned_pointer_map_test.cpp',
                 'owned_pointer_vector_test.cpp',
                 'parse_number_test.cpp',
                 'status_test.cpp',
                 'status_with_test.cpp',
                 'string_data_test.cpp'
                ])
